plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.2.20"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    // Repositories for resolving dependencies
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"hologram" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    // Bundle BlazeRod and its model format loaders directly into the mod (Jar-in-Jar)
    // These filenames must match libs/ exactly
    modImplementation files('libs/blazerod.jar')
    modImplementation files('libs/blazerod-render.jar')
    modImplementation files('libs/blazerod-model-base.jar')
    modImplementation files('libs/blazerod-model-formats.jar')
    modImplementation files('libs/blazerod-model-formats-gltf.jar')
    modImplementation files('libs/blazerod-model-formats-pmd.jar')
    modImplementation files('libs/blazerod-model-formats-pmx.jar')
    modImplementation files('libs/blazerod-model-formats-vmd.jar')
    modImplementation files('libs/blazerod-model-formats-bedrock.jar')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}

    // Embed BlazeRod jars under META-INF/jars for Jar-in-Jar loading
    from('libs') {
        include 'blazerod.jar'
        include 'blazerod-render.jar'
        include 'blazerod-model-base.jar'
        include 'blazerod-model-formats.jar'
        include 'blazerod-model-formats-gltf.jar'
        include 'blazerod-model-formats-pmd.jar'
        include 'blazerod-model-formats-pmx.jar'
        include 'blazerod-model-formats-vmd.jar'
        include 'blazerod-model-formats-bedrock.jar'
        into 'META-INF/jars'
    }
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}